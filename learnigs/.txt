// User Management
model User {
  id          String   @id @default(cuid())
  email       String   @unique
  phone       String?  @unique
  firstName   String
  lastName    String
  address     Json?    // Flexible address structure
  documents   Json?    // KYC documents
  creditScore Int?
  status      UserStatus @default(ACTIVE)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  loans       Loan[]
  payments    Payment[]
  
  @@map("users")
}

// Collateral Management
model Collateral {
  id              String         @id @default(cuid())
  type            CollateralType
  description     String
  weight          Decimal?       // For gold/precious metals
  purity          Decimal?       // Karat for gold, purity percentage
  estimatedValue  Decimal
  currentValue    Decimal
  appraisalDate   DateTime
  appraisedBy     String?
  photos          Json?          // Array of photo URLs
  certificates    Json?          // Authenticity certificates
  storageLocation String?
  status          CollateralStatus @default(AVAILABLE)
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  
  // Relations
  loans           LoanCollateral[]
  valuations      CollateralValuation[]
  
  @@map("collaterals")
}

// Loan Management
model Loan {
  id                String     @id @default(cuid())
  loanNumber        String     @unique
  borrowerId        String
  principalAmount   Decimal
  interestRate      Decimal
  loanTerm          Int        // Duration in months
  loanType          LoanType
  disbursementDate  DateTime?
  maturityDate      DateTime?
  status            LoanStatus @default(PENDING)
  purpose           String?
  
  // Calculated fields
  totalInterest     Decimal    @default(0)
  totalAmount       Decimal    @default(0)
  paidAmount        Decimal    @default(0)
  outstandingAmount Decimal    @default(0)
  
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  
  // Relations
  borrower          User       @relation(fields: [borrowerId], references: [id])
  collaterals       LoanCollateral[]
  payments          Payment[]
  schedules         PaymentSchedule[]
  
  @@map("loans")
}

// Junction table for loan-collateral relationship
model LoanCollateral {
  id            String      @id @default(cuid())
  loanId        String
  collateralId  String
  pledgedValue  Decimal     // Value at time of pledging
  loanToValue   Decimal     // LTV ratio
  createdAt     DateTime    @default(now())
  
  loan          Loan        @relation(fields: [loanId], references: [id])
  collateral    Collateral  @relation(fields: [collateralId], references: [id])
  
  @@unique([loanId, collateralId])
  @@map("loan_collaterals")
}

// Payment Management
model Payment {
  id              String      @id @default(cuid())
  loanId          String
  payerId         String
  amount          Decimal
  paymentDate     DateTime
  paymentMethod   PaymentMethod
  transactionRef  String?
  principalPaid   Decimal     @default(0)
  interestPaid    Decimal     @default(0)
  feesPaid        Decimal     @default(0)
  status          PaymentStatus @default(PENDING)
  notes           String?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  
  // Relations
  loan            Loan        @relation(fields: [loanId], references: [id])
  payer           User        @relation(fields: [payerId], references: [id])
  
  @@map("payments")
}

// Payment Scheduling
model PaymentSchedule {
  id              String      @id @default(cuid())
  loanId          String
  installmentNo   Int
  dueDate         DateTime
  principalDue    Decimal
  interestDue     Decimal
  totalDue        Decimal
  paidAmount      Decimal     @default(0)
  status          ScheduleStatus @default(PENDING)
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  
  loan            Loan        @relation(fields: [loanId], references: [id])
  
  @@unique([loanId, installmentNo])
  @@map("payment_schedules")
}

// Collateral Valuation History
model CollateralValuation {
  id              String      @id @default(cuid())
  collateralId    String
  valuationDate   DateTime
  marketPrice     Decimal     // Per unit (gram for gold)
  totalValue      Decimal
  valuatedBy      String?
  method          String?     // Manual, API, Market Rate
  source          String?     // Data source
  createdAt       DateTime    @default(now())
  
  collateral      Collateral  @relation(fields: [collateralId], references: [id])
  
  @@map("collateral_valuations")
}

// Enums
enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
  BLACKLISTED
}

enum CollateralType {
  GOLD_JEWELRY
  GOLD_COINS
  GOLD_BARS
  SILVER_JEWELRY
  SILVER_COINS
  SILVER_BARS
  PRECIOUS_STONES
  ANTIQUES
  ELECTRONICS
  VEHICLES
  REAL_ESTATE
  OTHER
}

enum CollateralStatus {
  AVAILABLE
  PLEDGED
  RELEASED
  LIQUIDATED
  DAMAGED
  LOST
}

enum LoanType {
  PERSONAL
  BUSINESS
  EMERGENCY
  GOLD_LOAN
  PAWN_LOAN
}

enum LoanStatus {
  PENDING
  APPROVED
  DISBURSED
  ACTIVE
  OVERDUE
  CLOSED
  DEFAULTED
  WRITTEN_OFF
}

enum PaymentMethod {
  CASH
  BANK_TRANSFER
  UPI
  CHEQUE
  DEMAND_DRAFT
  ONLINE
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
  CANCELLED
  REVERSED
}

enum ScheduleStatus {
  PENDING
  PAID
  OVERDUE
  PARTIAL
  WAIVED
}